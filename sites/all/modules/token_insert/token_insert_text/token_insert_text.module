<?php
/**
 * @file
 * token insert module.
 */
function token_insert_text_element_info_alter(&$types) {
  if (user_access('use token insert')) {
    $types['textarea']['#post_render'][] = 'token_insert_text_post_render';
    $types['textfield']['#post_render'][] = 'token_insert_text_post_render';
  }
}


function token_insert_text_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'field_ui_field_edit_form' && user_access('administer token insert settings')) {
    $entity = $form['#instance']['entity_type'];
    $bundle = $form['#instance']['bundle'];
    $field = $form['#instance']['field_name'];
    $form['token_insert'] = array(
      '#title' => t('Token Insert'),
      '#type' => 'fieldset',
      '#collapsible' => FALSE,
    );

    $form['token_insert']['use_for_token_insert'] = array(
      '#type' => 'checkbox',
      '#title' => t('Use Token Insert for this field'),
      //variable_get('token_insert_content_type_*typename*_*fieldname*, 0)
      '#default_value' => variable_get('token_insert_' . $entity . '_' . $bundle . '_' . $field, 0),
      '#description' => t('If selected Token Insert will be available for this field'),
    );

    $form['#submit'][] = 'token_insert_text_add_bundle';

  }
}

function token_insert_text_add_bundle($form, &$form_state) {
  $entity = $form['#instance']['entity_type'];
  $bundle = $form['#instance']['bundle'];
  $field = $form['#instance']['field_name'];
  variable_set('token_insert_' . $entity . '_' . $bundle . '_' . $field,  $form_state['values']['use_for_token_insert']);
}

function token_insert_text_post_render($content, $element) {
  if (isset($element['#entity_type']) && isset($element['#bundle'])) {
    if (variable_get('token_insert_' . $element['#entity_type'] . '_' . $element['#bundle'] . '_' . $element['#field_name'], 0) == 1) {
      $content = _token_insert_add_token_insert($content, $element);
    }
  }
  if (isset($element['#token_insert']) && $element['#token_insert']) {
    $content = _token_insert_add_token_insert($content, $element);
  }

  return $content;
}

function _token_insert_add_token_insert($content, $element) {
  module_load_include('inc', 'token_insert', 'token_insert');
  drupal_add_js(drupal_get_path('module', 'token_insert') . '/token_insert.js');
  drupal_add_js(drupal_get_path('module', 'token_insert_text') . '/token_insert_text.js');
  if (!isset($element['summary'])) {
    $contentarray = token_insert_text_combobox($element);
    $content .= drupal_render($contentarray);
  }
  if (isset($element['#name'])) {
   $content .= drupal_render(drupal_get_form('token_insert_text_combobox', $element['#name']));
  }
  return $content;
}

function token_insert_text_combobox($element) {
  $form = array();
  if (isset($element['#title'])) {
    $options = token_insert_get_tokens();
    $name = isset($element['#field_name']) ? $element['#field_name'] : $element['#name'];
    $settings['token_insert']['buttons']["token-insert-text-button-$name"] = $element['#id'];
    drupal_add_js($settings, array('type' => 'setting')) ;
    $form['token_insert_text_combobox'] = array(
      '#type' => 'fieldset',
      '#collapsible' => TRUE,
      '#title' => t('Insert token'),
    );
    $form['token_insert_text_combobox']['token_insert_text_select'] = array(
      '#type' => 'select',
      '#options' => $options,
      '#attributes' => array(
        'id' => array("token-insert-text-select-$name"),
      ),
    );

    $form['token_insert_text_combobox']['token_insert_text_button'] = array(
      '#type' => 'button',
      '#value' => t('Insert'),
      '#executes_submit_callback' => FALSE,
      '#attributes' => array(
        'class' => array('token-insert-text-button'),
        'rel' => $name,
        'id' => array("token-insert-text-button-$name"),
      ),
    );
  }
  return $form;

}
